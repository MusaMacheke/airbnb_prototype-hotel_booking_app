// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // url = "postgresql://postgres:postgres@localhost:5432"
  directUrl = env("DIRECT_URL") // directUrl = "postgresql://postgres:postgres@localhost:5432"
  //"postgresql://postgres.pjdroyactshymmugwild:hjahsdjashjahsajsdhjasda@aws-0-us-east-1.pooler.supabase.com:6543/postgres"
  // directUrl = "postgres://postgres:hjahsdjashjahsajsdhjasda@localhost:5432"
}

// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }

model User {
  id String @id @unique
  // id           String @id @default(auto()) @map("_id") @db.ObjectId

  email        String @unique
  firstName    String
  lastName     String
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Home         Home[]
  Favorite     Favorite[]
  Reservation  Reservation[]
}

model Home {
  id String @id @default(uuid())
  // id           String @id @default(auto()) @map("_id") @db.ObjectId
  
  title        String?
  description  String?
  guests       String?
  bedrooms     String?
  bathrooms    String?
  country      String?
  photo        String?
  price        Int?
  categoryName String?
  Favorite     Favorite[]
  Reservation  Reservation[]

  addedCategory    Boolean @default(false)
  addedDescription Boolean @default(false)
  addedLoaction    Boolean @default(false)

  createdAT DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  
}

model Favorite {
  id String @id @default(uuid())
  // id     String @id @default(auto()) @map("_id") @db.ObjectId

  User   User?   @relation(fields: [userId], references: [id])
  userId String? 
  Home   Home?   @relation(fields: [homeId], references: [id])
  homeId String? 

  createAt DateTime @default(now())
}

model Reservation {
  id String @id @default(uuid())
  // id String @id @default(auto()) @map("_id") @db.ObjectId

  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())

  User   User?   @relation(fields: [userId], references: [id])
  userId String? 
  Home   Home?   @relation(fields: [homeId], references: [id])
  homeId String? 
}
